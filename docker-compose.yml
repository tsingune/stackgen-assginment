version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: meeting-scheduler-app
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - SERVER_PORT=8080
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=scheduler
      - DB_SSLMODE=disable
    networks:
      - scheduler-network
    restart: unless-stopped
    command: >
      sh -c "
        echo 'Waiting for postgres to be ready...'
        sleep 5
        ./main
      "
    healthcheck:
      test: ["CMD", "wget", "-O-", "http://localhost:8080/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s

  postgres:
    image: postgres:14-alpine
    container_name: meeting-scheduler-db
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=scheduler
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - scheduler-network
    restart: unless-stopped

  pgadmin:
    image: dpage/pgadmin4
    container_name: meeting-scheduler-pgadmin
    ports:
      - "5050:80"
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@example.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - scheduler-network
    restart: unless-stopped

volumes:
  postgres_data:
  pgadmin_data:

networks:
  scheduler-network:
    driver: bridge 