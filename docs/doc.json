{
  "openapi": "3.0.0",
  "info": {
    "title": "Meeting Scheduler API",
    "version": "1.0.0",
    "description": "API for scheduling meetings and managing participant availability"
  },
  "servers": [
    {
      "url": "http://localhost:8080",
      "description": "Local development server"
    }
  ],
  "components": {
    "schemas": {
      "Event": {
        "type": "object",
        "required": [
          "title",
          "organizer_id",
          "duration"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "uint",
            "readOnly": true
          },
          "title": {
            "type": "string",
            "example": "Team Weekly Sync"
          },
          "description": {
            "type": "string",
            "example": "Weekly team sync meeting to discuss progress"
          },
          "organizer_id": {
            "type": "integer",
            "format": "uint"
          },
          "duration": {
            "type": "integer",
            "description": "Duration in minutes",
            "example": 60
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        }
      },
      "TimeSlot": {
        "type": "object",
        "required": [
          "event_id",
          "start_time",
          "end_time"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "uint",
            "readOnly": true
          },
          "event_id": {
            "type": "integer",
            "format": "uint"
          },
          "start_time": {
            "type": "string",
            "format": "date-time"
          },
          "end_time": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Availability": {
        "type": "object",
        "required": [
          "participant_id",
          "time_slot_id",
          "is_available"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "uint",
            "readOnly": true
          },
          "participant_id": {
            "type": "integer",
            "format": "uint"
          },
          "time_slot_id": {
            "type": "integer",
            "format": "uint"
          },
          "is_available": {
            "type": "boolean"
          }
        }
      },
      "Participant": {
        "type": "object",
        "required": [
          "name",
          "email"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "uint",
            "readOnly": true
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string"
          }
        }
      }
    }
  },
  "paths": {
    "/api/v1/events": {
      "post": {
        "summary": "Create a new event",
        "operationId": "createEvent",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Event"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Event created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/events/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "uint"
          }
        }
      ],
      "get": {
        "summary": "Get event by ID",
        "operationId": "getEvent",
        "responses": {
          "200": {
            "description": "Event found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          },
          "404": {
            "description": "Event not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update event",
        "operationId": "updateEvent",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Event"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Event updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          },
          "404": {
            "description": "Event not found"
          }
        }
      },
      "delete": {
        "summary": "Delete event",
        "operationId": "deleteEvent",
        "responses": {
          "204": {
            "description": "Event deleted successfully"
          },
          "404": {
            "description": "Event not found"
          }
        }
      }
    },
    "/api/v1/events/{id}/timeslots": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "uint"
          }
        }
      ],
      "post": {
        "summary": "Add time slot to event",
        "operationId": "addTimeSlot",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TimeSlot"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Time slot added successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeSlot"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get time slots for event",
        "operationId": "getTimeSlots",
        "responses": {
          "200": {
            "description": "List of time slots",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TimeSlot"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/events/{id}/availability": {
      "post": {
        "summary": "Submit availability for time slot",
        "operationId": "submitAvailability",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "uint"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Availability"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Availability submitted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Availability"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/events/{id}/recommendations": {
      "get": {
        "summary": "Get time slot recommendations",
        "operationId": "getRecommendations",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "uint"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of recommended time slots",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "time_slot": {
                        "$ref": "#/components/schemas/TimeSlot"
                      },
                      "available_count": {
                        "type": "integer"
                      },
                      "unavailable_count": {
                        "type": "integer"
                      },
                      "available_users": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/Participant"
                        }
                      },
                      "unavailable_users": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/Participant"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/participants": {
      "post": {
        "summary": "Create a new participant",
        "operationId": "createParticipant",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Participant"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Participant created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Participant"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/participants/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "uint"
          }
        }
      ],
      "get": {
        "summary": "Get participant by ID",
        "operationId": "getParticipant",
        "responses": {
          "200": {
            "description": "Participant found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Participant"
                }
              }
            }
          },
          "404": {
            "description": "Participant not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/health": {
      "get": {
        "summary": "Health check endpoint",
        "operationId": "healthCheck",
        "responses": {
          "200": {
            "description": "Service is healthy",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "OK"
                }
              }
            }
          }
        }
      }
    },
    "/debug/db": {
      "get": {
        "summary": "Database connection check",
        "operationId": "dbCheck",
        "responses": {
          "200": {
            "description": "Database connection is working",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "ok"
                    },
                    "message": {
                      "type": "string",
                      "example": "Database connection successful"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Database connection failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "error"
                    },
                    "message": {
                      "type": "string",
                      "example": "Database connection failed: error message"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
} 